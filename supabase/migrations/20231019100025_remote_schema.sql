
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_cron" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgroonga" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE SCHEMA IF NOT EXISTS "rtu_mirea";

ALTER SCHEMA "rtu_mirea" OWNER TO "supabase_admin";

CREATE EXTENSION IF NOT EXISTS "intarray" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "vector" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "wrappers" WITH SCHEMA "extensions";


CREATE OR REPLACE FUNCTION "rtu_mirea"."get_debtors_by_institute"("_institute" "text") RETURNS integer
    LANGUAGE "plpgsql"
    AS $$BEGIN
  RETURN (
    SELECT COUNT(DISTINCT d.student_uuid)
    FROM rtu_mirea.debts_disciplines d
    JOIN rtu_mirea.students s ON d.student_uuid = s.student_uuid
    WHERE s.status = 'активный' and s.institute = _institute
  );
END;
$$;

ALTER FUNCTION "rtu_mirea"."get_debtors_by_institute"("_institute" "text") OWNER TO "supabase_admin";

CREATE OR REPLACE FUNCTION "rtu_mirea"."get_debts_count"() RETURNS integer
    LANGUAGE "plpgsql"
    AS $$
BEGIN
  RETURN (
    SELECT COUNT(d.name)
    FROM rtu_mirea.debts_disciplines d
    JOIN rtu_mirea.students s ON d.student_uuid = s.student_uuid
    WHERE s.status = 'активный'
  );
END;$$;

ALTER FUNCTION "rtu_mirea"."get_debts_count"() OWNER TO "supabase_admin";

CREATE OR REPLACE FUNCTION "rtu_mirea"."get_students_by_institute"("_institute" "text") RETURNS integer
    LANGUAGE "plpgsql"
    AS $$BEGIN
  RETURN (
    SELECT COUNT(DISTINCT s.student_uuid)
    FROM rtu_mirea.students s
    WHERE s.status = 'активный' AND s.institute = _institute
  );
END;
$$;

ALTER FUNCTION "rtu_mirea"."get_students_by_institute"("_institute" "text") OWNER TO "supabase_admin";

CREATE OR REPLACE FUNCTION "rtu_mirea"."get_unique_debtors_count"() RETURNS integer
    LANGUAGE "plpgsql"
    AS $$BEGIN
  RETURN (
    SELECT COUNT(DISTINCT d.student_uuid)
    FROM rtu_mirea.debts_disciplines d
    JOIN rtu_mirea.students s ON d.student_uuid = s.student_uuid
    WHERE s.status = 'активный'
  );
END;
$$;

ALTER FUNCTION "rtu_mirea"."get_unique_debtors_count"() OWNER TO "supabase_admin";

CREATE OR REPLACE FUNCTION "rtu_mirea"."get_unique_disciplines"() RETURNS SETOF "text"
    LANGUAGE "sql"
    AS $$
   SELECT DISTINCT d.name
    FROM rtu_mirea.debts_disciplines d
    JOIN rtu_mirea.students s ON d.student_uuid = s.student_uuid
    WHERE s.status = 'активный';
$$;

ALTER FUNCTION "rtu_mirea"."get_unique_disciplines"() OWNER TO "supabase_admin";

CREATE OR REPLACE FUNCTION "rtu_mirea"."get_unique_disciplines_uuid"() RETURNS SETOF "uuid"
    LANGUAGE "sql"
    AS $$
  SELECT DISTINCT d.name_uuid
    FROM rtu_mirea.debts_disciplines d
    JOIN rtu_mirea.students s ON d.student_uuid = s.student_uuid
    WHERE s.status = 'активный';
$$;

ALTER FUNCTION "rtu_mirea"."get_unique_disciplines_uuid"() OWNER TO "supabase_admin";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "rtu_mirea"."debts_disciplines" (
    "id" bigint NOT NULL,
    "student_uuid" "uuid" NOT NULL,
    "name" "text" NOT NULL,
    "name_uuid" "uuid",
    "department" "text"
);

ALTER TABLE "rtu_mirea"."debts_disciplines" OWNER TO "supabase_admin";

ALTER TABLE "rtu_mirea"."debts_disciplines" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "rtu_mirea"."disciplines_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "rtu_mirea"."retakes" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "place" "text" NOT NULL,
    "discipline" "text" NOT NULL,
    "description" "text",
    "date" "date" NOT NULL,
    "time_start" time without time zone NOT NULL,
    "time_end" time without time zone NOT NULL,
    "need_statement" boolean DEFAULT false NOT NULL,
    "is_online" boolean DEFAULT false NOT NULL,
    "teachers" "text" NOT NULL,
    "creator_id" "uuid" DEFAULT "auth"."uid"() NOT NULL
);

ALTER TABLE "rtu_mirea"."retakes" OWNER TO "supabase_admin";

ALTER TABLE "rtu_mirea"."retakes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "rtu_mirea"."retakes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "rtu_mirea"."social_networks" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "uuid" NOT NULL,
    "external_id" "text" NOT NULL,
    "username" "text" NOT NULL,
    "student_id" "uuid"
);

ALTER TABLE "rtu_mirea"."social_networks" OWNER TO "supabase_admin";

ALTER TABLE "rtu_mirea"."social_networks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "rtu_mirea"."social_networks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "rtu_mirea"."statistics" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "debts" integer NOT NULL,
    "debtors" integer NOT NULL,
    "by_institutes" "json" NOT NULL
);

ALTER TABLE "rtu_mirea"."statistics" OWNER TO "supabase_admin";

ALTER TABLE "rtu_mirea"."statistics" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "rtu_mirea"."statistics_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "rtu_mirea"."students" (
    "id" bigint NOT NULL,
    "student_uuid" "uuid" NOT NULL,
    "academic_group" "text",
    "first_name" "text" NOT NULL,
    "last_name" "text" NOT NULL,
    "second_name" "text",
    "status" "text",
    "personal_number" "text",
    "institute" "text",
    "direction_code" "text",
    "academic_email" "text",
    "email" "text"
);

ALTER TABLE "rtu_mirea"."students" OWNER TO "supabase_admin";

ALTER TABLE "rtu_mirea"."students" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "rtu_mirea"."students_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "rtu_mirea"."debts_disciplines"
    ADD CONSTRAINT "disciplines_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "rtu_mirea"."retakes"
    ADD CONSTRAINT "retakes_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "rtu_mirea"."social_networks"
    ADD CONSTRAINT "social_networks_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "rtu_mirea"."statistics"
    ADD CONSTRAINT "statistics_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "rtu_mirea"."students"
    ADD CONSTRAINT "students_pkey" PRIMARY KEY ("student_uuid");

ALTER TABLE ONLY "rtu_mirea"."students"
    ADD CONSTRAINT "students_student_id_key" UNIQUE ("student_uuid");

ALTER TABLE ONLY "rtu_mirea"."debts_disciplines"
    ADD CONSTRAINT "debts_disciplines_student_uuid_fkey" FOREIGN KEY ("student_uuid") REFERENCES "rtu_mirea"."students"("student_uuid");

ALTER TABLE ONLY "rtu_mirea"."retakes"
    ADD CONSTRAINT "retakes_creator_id_fkey" FOREIGN KEY ("creator_id") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "rtu_mirea"."social_networks"
    ADD CONSTRAINT "social_networks_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "rtu_mirea"."students"("student_uuid");

ALTER TABLE ONLY "rtu_mirea"."social_networks"
    ADD CONSTRAINT "social_networks_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");

CREATE POLICY "Enable delete for users based on user_id" ON "rtu_mirea"."retakes" FOR DELETE USING (("auth"."uid"() = "creator_id"));

CREATE POLICY "Enable delete for users based on user_id" ON "rtu_mirea"."social_networks" FOR DELETE USING (("auth"."uid"() = "user_id"));

CREATE POLICY "Enable insert for authenticated users only" ON "rtu_mirea"."social_networks" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for employees" ON "rtu_mirea"."retakes" FOR INSERT WITH CHECK ((((("auth"."jwt"() ->> 'user_metadata'::"text"))::"jsonb" ->> 'email'::"text") ~~ '%@mirea.ru'::"text"));

CREATE POLICY "Enable read access for all users" ON "rtu_mirea"."retakes" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable read access for employees" ON "rtu_mirea"."debts_disciplines" FOR SELECT TO "authenticated" USING ((((("auth"."jwt"() ->> 'user_metadata'::"text"))::"jsonb" ->> 'email'::"text") ~~ '%@mirea.ru'::"text"));

CREATE POLICY "Enable read access for employees" ON "rtu_mirea"."social_networks" FOR SELECT USING ((((("auth"."jwt"() ->> 'user_metadata'::"text"))::"jsonb" ->> 'email'::"text") ~~ '%@mirea.ru'::"text"));

CREATE POLICY "Enable read access for employees" ON "rtu_mirea"."statistics" FOR SELECT USING ((((("auth"."jwt"() ->> 'user_metadata'::"text"))::"jsonb" ->> 'email'::"text") ~~ '%@mirea.ru'::"text"));

CREATE POLICY "Enable read access for employees" ON "rtu_mirea"."students" FOR SELECT USING ((((("auth"."jwt"() ->> 'user_metadata'::"text"))::"jsonb" ->> 'email'::"text") ~~ '%@mirea.ru'::"text"));

CREATE POLICY "Enable select for users based on user_id" ON "rtu_mirea"."social_networks" FOR SELECT USING (("auth"."uid"() = "user_id"));

CREATE POLICY "Enable select only own users debts" ON "rtu_mirea"."debts_disciplines" FOR SELECT TO "authenticated" USING ((((("auth"."jwt"() ->> 'user_metadata'::"text"))::"jsonb" ->> 'provider_id'::"text") = ("student_uuid")::"text"));

CREATE POLICY "Enable update for users based on user_id" ON "rtu_mirea"."retakes" FOR UPDATE USING (("auth"."uid"() = "creator_id"));

CREATE POLICY "Enable update for users based on user_id" ON "rtu_mirea"."social_networks" FOR UPDATE USING (("auth"."uid"() = "user_id"));

ALTER TABLE "rtu_mirea"."debts_disciplines" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "rtu_mirea"."retakes" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "rtu_mirea"."social_networks" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "rtu_mirea"."statistics" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "rtu_mirea"."students" ENABLE ROW LEVEL SECURITY;


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT USAGE ON SCHEMA "rtu_mirea" TO "anon";
GRANT USAGE ON SCHEMA "rtu_mirea" TO "authenticated";
GRANT USAGE ON SCHEMA "rtu_mirea" TO "service_role";
GRANT USAGE ON SCHEMA "rtu_mirea" TO "supabase_functions_admin";
GRANT USAGE ON SCHEMA "rtu_mirea" TO "postgres";
GRANT USAGE ON SCHEMA "rtu_mirea" TO "dashboard_user";

GRANT ALL ON FUNCTION "rtu_mirea"."get_debtors_by_institute"("_institute" "text") TO "anon";
GRANT ALL ON FUNCTION "rtu_mirea"."get_debtors_by_institute"("_institute" "text") TO "authenticated";
GRANT ALL ON FUNCTION "rtu_mirea"."get_debtors_by_institute"("_institute" "text") TO "service_role";

GRANT ALL ON FUNCTION "rtu_mirea"."get_debts_count"() TO "postgres";
GRANT ALL ON FUNCTION "rtu_mirea"."get_debts_count"() TO "anon";
GRANT ALL ON FUNCTION "rtu_mirea"."get_debts_count"() TO "authenticated";
GRANT ALL ON FUNCTION "rtu_mirea"."get_debts_count"() TO "service_role";

GRANT ALL ON FUNCTION "rtu_mirea"."get_students_by_institute"("_institute" "text") TO "anon";
GRANT ALL ON FUNCTION "rtu_mirea"."get_students_by_institute"("_institute" "text") TO "authenticated";
GRANT ALL ON FUNCTION "rtu_mirea"."get_students_by_institute"("_institute" "text") TO "service_role";

GRANT ALL ON FUNCTION "rtu_mirea"."get_unique_debtors_count"() TO "anon";
GRANT ALL ON FUNCTION "rtu_mirea"."get_unique_debtors_count"() TO "authenticated";
GRANT ALL ON FUNCTION "rtu_mirea"."get_unique_debtors_count"() TO "service_role";

GRANT ALL ON FUNCTION "rtu_mirea"."get_unique_disciplines"() TO "anon";
GRANT ALL ON FUNCTION "rtu_mirea"."get_unique_disciplines"() TO "authenticated";
GRANT ALL ON FUNCTION "rtu_mirea"."get_unique_disciplines"() TO "service_role";

GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE "rtu_mirea"."debts_disciplines" TO "postgres";
GRANT ALL ON TABLE "rtu_mirea"."debts_disciplines" TO "authenticated";
GRANT ALL ON TABLE "rtu_mirea"."debts_disciplines" TO "service_role";
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE "rtu_mirea"."debts_disciplines" TO "dashboard_user";
GRANT ALL ON TABLE "rtu_mirea"."debts_disciplines" TO "anon";

GRANT ALL ON SEQUENCE "rtu_mirea"."disciplines_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "rtu_mirea"."disciplines_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "rtu_mirea"."disciplines_id_seq" TO "service_role";

GRANT ALL ON TABLE "rtu_mirea"."retakes" TO "anon";
GRANT ALL ON TABLE "rtu_mirea"."retakes" TO "authenticated";
GRANT ALL ON TABLE "rtu_mirea"."retakes" TO "service_role";

GRANT ALL ON SEQUENCE "rtu_mirea"."retakes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "rtu_mirea"."retakes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "rtu_mirea"."retakes_id_seq" TO "service_role";

GRANT ALL ON TABLE "rtu_mirea"."social_networks" TO "anon";
GRANT ALL ON TABLE "rtu_mirea"."social_networks" TO "authenticated";
GRANT ALL ON TABLE "rtu_mirea"."social_networks" TO "service_role";

GRANT ALL ON SEQUENCE "rtu_mirea"."social_networks_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "rtu_mirea"."social_networks_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "rtu_mirea"."social_networks_id_seq" TO "service_role";

GRANT ALL ON TABLE "rtu_mirea"."statistics" TO "anon";
GRANT ALL ON TABLE "rtu_mirea"."statistics" TO "authenticated";
GRANT ALL ON TABLE "rtu_mirea"."statistics" TO "service_role";
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE "rtu_mirea"."statistics" TO "postgres";
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE "rtu_mirea"."statistics" TO "dashboard_user";

GRANT ALL ON SEQUENCE "rtu_mirea"."statistics_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "rtu_mirea"."statistics_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "rtu_mirea"."statistics_id_seq" TO "service_role";

GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE "rtu_mirea"."students" TO "postgres";
GRANT ALL ON TABLE "rtu_mirea"."students" TO "authenticated";
GRANT ALL ON TABLE "rtu_mirea"."students" TO "service_role";
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE "rtu_mirea"."students" TO "dashboard_user";
GRANT ALL ON TABLE "rtu_mirea"."students" TO "anon";

GRANT ALL ON SEQUENCE "rtu_mirea"."students_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "rtu_mirea"."students_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "rtu_mirea"."students_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "rtu_mirea" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "rtu_mirea" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "rtu_mirea" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "rtu_mirea" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "rtu_mirea" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "rtu_mirea" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "rtu_mirea" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "rtu_mirea" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "rtu_mirea" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
